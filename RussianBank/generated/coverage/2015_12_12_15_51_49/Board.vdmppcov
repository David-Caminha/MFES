class Board

types
-- TODO Define types here

values
-- TODO Define values here

instance variables
	public p1Deck : Deck := new Deck();
	public p2Deck : Deck := new Deck();
	
	public p1Reserve : CardStack := new CardStack();
	public p2Reserve : CardStack := new CardStack();
	
	public p1Waste : CardStack := new CardStack();
	public p2Waste : CardStack := new CardStack();
	
	public p1Hand : CardStack := new CardStack();
	public p2Hand : CardStack := new CardStack();
	
	public foundation1 : BoardUtils`foundation := [];
	public foundation2 : BoardUtils`foundation := [];
	public foundation3 : BoardUtils`foundation := [];
	public foundation4 : BoardUtils`foundation := [];
	public foundation5 : BoardUtils`foundation := [];
	public foundation6 : BoardUtils`foundation := [];
	public foundation7 : BoardUtils`foundation := [];
	public foundation8 : BoardUtils`foundation := [];
	
	public tableau1 : BoardUtils`tableau := [];
	public tableau2 : BoardUtils`tableau := [];
	public tableau3 : BoardUtils`tableau := [];
	public tableau4 : BoardUtils`tableau := [];
	public tableau5 : BoardUtils`tableau := [];
	public tableau6 : BoardUtils`tableau := [];
	public tableau7 : BoardUtils`tableau := [];
	public tableau8 : BoardUtils`tableau := [];

operations
	public Board : () ==> Board
	Board() == (
		dealReserve();
		dealTableau();
		return self
	);
	
	public dealReserve : () ==> ()
	dealReserve() == (
		for i = 1 to 13 do
			(p1Reserve.push(p1Deck.dealCard());
			 p2Reserve.push(p2Deck.dealCard()));
		p1Reserve.turnCard();
		p2Reserve.turnCard()
	)
	pre len p1Reserve.contents = 0
	post len p1Reserve.contents = 13;
	
	public dealTableau : () ==> ()
	dealTableau() == (
		tableau1 := tableau1 ^ [p1Deck.dealCard()];
		tableau2 := tableau2 ^ [p1Deck.dealCard()];
		tableau3 := tableau3 ^ [p1Deck.dealCard()];
		tableau4 := tableau4 ^ [p1Deck.dealCard()];
		tableau5 := tableau5 ^ [p2Deck.dealCard()];
		tableau6 := tableau6 ^ [p2Deck.dealCard()];
		tableau7 := tableau7 ^ [p2Deck.dealCard()];
		tableau8 := tableau8 ^ [p2Deck.dealCard()];
	);
	
	public dealHand : () ==> ()
	dealHand() == (
		for i = 1 to len p1Deck.cards do
			(p1Hand.push(p1Deck.dealCard());
			 p2Hand.push(p2Deck.dealCard()));
	);

functions
-- TODO Define functiones here

traces
-- TODO Define Combinatorial Test Traces here

end Board