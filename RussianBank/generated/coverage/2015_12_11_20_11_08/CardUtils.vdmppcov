class CardUtils

values
	public NumberValues : set of nat1 = {2, ..., 9};
	public CharValues : set of char = {'T', 'J', 'Q', 'K', 'A'};
	public CardValues : set of (nat1 | char) = NumberValues union CharValues;
	public CardSuitsRed : set of seq1 of char = {"HEARTS", "DIAMONDS"};
	public CardSuitsBlack : set of seq1 of char = {"SPADES", "CLUBS"};
	public CardSuits = CardSuitsRed union CardSuitsBlack;
	public valuesOrder : seq of (nat1 | char) = ['A', 2, 3, 4, 5, 6, 7, 8, 9, 'T', 'J', 'Q', 'K'];
	
types
	public cardValue = nat1 | char
		inv v == v in set CardValues;
		
	public cardSuit = seq1 of char
		inv s == s in set CardSuits;
		
	public carta :: value : cardValue
									suit : cardSuit;

functions
	public followsInTableau : carta * carta -> bool
	followsInTableau(c1, c2) == (
		exists i in set inds valuesOrder &
		if
			valuesOrder(i) = c1.value and
			valuesOrder(i-1) = c2.value 
		then
			if
				(c1.suit in set CardSuitsRed and c2.suit in set CardSuitsBlack) or
				(c1.suit in set CardSuitsBlack and c2.suit in set CardSuitsRed)
			then true
			else false
		else false
	)
	pre c1.value <> 'A' and c2.value <> 'K' and c1 <> c2;
	
	public followsInFoundation : carta * carta -> bool
	followsInFoundation(c1, c2) == (
		exists i in set inds valuesOrder &
		if
			valuesOrder(i) = c1.value and
			valuesOrder(i+1) = c2.value 
		then
			if
				c1.suit = c2.suit
			then true
			else false
		else false
	)
	pre c1.value <> 'K' and c1 <> c2;
	
	public followsInReserve : carta * carta -> bool
	followsInReserve(c1, c2) == (
		exists i in set inds valuesOrder &
		if
			valuesOrder(i) = c1.value and
			(valuesOrder(i-1) = c2.value or valuesOrder(i+1) = c2.value)
		then
			if
				c1.suit = c2.suit
			then true
			else false
		else false
	)
	pre c1 <> c2;

end CardUtils